stages:
  - build
  - tests
  - publish


# Global parameters for all jobs, cache everything we install.
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.pip_cache"

.pip-cache: &pip_cache
  key: ${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME_SLUG}
  paths:
    - .pip_cache/
  policy: pull-push


build-package:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: build
  cache:
    <<: *pip_cache
  script:
    - python -m build --sdist --wheel
  artifacts:
    name: "aio_ld2410-${CI_COMMIT_REF_NAME}"
    expire_in: 7 days
    paths:
      - dist/

build-docs:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: build
  cache:
    <<: *pip_cache
  variables:
    # Ensure that sphinx has the correct identifier (see docs/conf.py).
    READTHEDOCS_GIT_IDENTIFIER: ${CI_COMMIT_REF_NAME}
    READTHEDOCS_GIT_COMMIT_HASH: ${CI_COMMIT_SHA}
    READTHEDOCS_VERSION_TYPE: 'tag'
    READTHEDOCS_VERSION_NAME: ${CI_COMMIT_TAG}
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-docs
  script:
    - make -C docs html
  artifacts:
    expire_in: 7 days
    paths:
      - docs/_build/html

linting:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-linting
  script:
    - ruff check --exit-zero --output-format=gitlab -o gl-code-quality-report.json
    - ruff format --check --diff
    - ruff check
  artifacts:
    expire_in: 7 days
    reports:
      codequality: gl-code-quality-report.json
  allow_failure: true

typing:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-package
    - make install-linting
  script:
    - mypy --junit-xml mypy.xml
  artifacts:
    reports:
      junit: mypy.xml
  allow_failure: true

tests:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: tests
  needs: []
  cache:
    <<: *pip_cache
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-testing
  script:
    - pytest --cov=aio_ld2410 --junit-xml=pytest.xml
    - coverage xml
  coverage: '/TOTAL.+ ([0-9]{1,3}[.][0-9]{2}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: pytest.xml

pages:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: publish
  only:
    - master
    - tags
  needs:
    - build-docs
  script:
    - mv docs/_build/html public
  artifacts:
    expire_in: 7 days
    paths:
      - public

publish-package:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.13-alpine
  stage: publish
  variables:
    TWINE_REPOSITORY_URL: ${CI_SERVER_URL}/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
  only:
    - tags
  needs:
    - build-package
  script:
    - twine upload dist/aio_ld2410-*.whl
